{"version":3,"file":"static/js/680.a4f1f109.chunk.js","mappings":"uQACO,SAASA,IACd,OAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eAOA,OACE,kBACEC,SAAU,SAAAC,GARO,IAAAC,EASfD,EAAIE,iBARM,MADKD,EAUFD,EAAIG,OAAO,GAAGF,QAN/BH,EAAgB,CAAEM,MAAOH,GAOtB,EAJH,WAME,kBAAOI,KAAK,UACZ,mBAAQA,KAAK,SAAb,sBAGL,CCdD,IAiCA,EAjCe,WAAO,IAAD,EACnB,GAAuBR,EAAAA,EAAAA,MACjBO,EAAK,WADX,eAC2BE,IAAI,gBAApB,QAAgC,GAC3C,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAgBC,EAAAA,EAAAA,UAsBtB,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,2FACMF,EAAcG,SAChBH,EAAcG,QAAQC,QAExBJ,EAAcG,QAAU,IAAIE,gBAJ9B,mBAMyBC,EAAAA,EAAAA,IAAkBZ,EAAO,CAC5Ca,OAAQP,EAAcG,QAAQI,SAPpC,OAMUC,EANV,OASIT,EAAkBS,GATtB,gDAWIC,QAAQC,IAAR,MAXJ,0DAJc,sBACThB,GADS,mCAkBdiB,EACD,GAAE,CAACjB,KAGF,4BACE,SAACR,EAAD,KACA,SAAC0B,EAAA,EAAD,CAAYJ,OAAQV,MAGzB,C","sources":["components/SearchForm/SearchForm.js","pages/SearchPage.js"],"sourcesContent":["import { useSearchParams } from 'react-router-dom';\nexport function Form() {\n  const [, setSearchParams] = useSearchParams();\n  const handleSubmit = value => {\n    if (value === '') {\n      return;\n    }\n    setSearchParams({ query: value });\n  };\n  return (\n    <form\n      onSubmit={evt => {\n        evt.preventDefault();\n        handleSubmit(evt.target[0].value);\n      }}\n    >\n      <input type=\"text\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n","import { fetchMovieByQuery } from 'api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const controllerRef = useRef();\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function getMoviesByQuery() {\n      if (controllerRef.current) {\n        controllerRef.current.abort();\n      }\n      controllerRef.current = new AbortController();\n      try {\n        const movies = await fetchMovieByQuery(query, {\n          signal: controllerRef.current.signal,\n        });\n        setSearchedMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMoviesByQuery();\n  }, [query]);\n\n  return (\n    <div>\n      <Form />\n      <MoviesList movies={searchedMovies} />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["Form","useSearchParams","setSearchParams","onSubmit","evt","value","preventDefault","target","query","type","get","useState","searchedMovies","setSearchedMovies","controllerRef","useRef","useEffect","current","abort","AbortController","fetchMovieByQuery","signal","movies","console","log","getMoviesByQuery","MoviesList"],"sourceRoot":""}