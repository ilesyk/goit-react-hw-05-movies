{"version":3,"file":"static/js/785.fee20e95.chunk.js","mappings":"yNA4CA,UAxCgB,WACd,IAAMA,GAASC,EAAAA,EAAAA,MACf,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAgBC,EAAAA,EAAAA,UAmBtB,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACMF,EAAcG,SAChBH,EAAcG,QAAQC,QAExBJ,EAAcG,QAAU,IAAIE,gBAJ9B,mBAM+BC,EAAAA,EAAAA,IAAkBX,EAAOY,QAAS,CAC3DC,OAAQR,EAAcG,QAAQK,SAPpC,OAMUC,EANV,OASIV,EAAWU,EAAaC,SAT5B,gDAWIC,QAAQC,IAAR,MAXJ,0DADc,uBAAC,WAAD,wBAedC,CAAgBlB,EAAOY,QACxB,GAAE,CAACZ,EAAOY,WAGT,yBACGT,GAAWA,EAAQgB,OAAS,GAC3B,wBACGhB,EAAQiB,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,qEAIP,C","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import { fetchMovieReviews } from 'api';\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const params = useParams();\n  const [reviews, setReviews] = useState(null);\n  const controllerRef = useRef();\n  useEffect(() => {\n    async function getMovieReviews() {\n      if (controllerRef.current) {\n        controllerRef.current.abort();\n      }\n      controllerRef.current = new AbortController();\n      try {\n        const movieReviews = await fetchMovieReviews(params.movieId, {\n          signal: controllerRef.current.signal,\n        });\n        setReviews(movieReviews.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieReviews(params.movieId);\n  }, [params.movieId]);\n\n  return (\n    <div>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["params","useParams","useState","reviews","setReviews","controllerRef","useRef","useEffect","current","abort","AbortController","fetchMovieReviews","movieId","signal","movieReviews","results","console","log","getMovieReviews","length","map","review","author","content","id"],"sourceRoot":""}