{"version":3,"file":"static/js/248.193e4035.chunk.js","mappings":"uQAKO,SAASA,IAAgB,IAAD,EAC7B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAgBC,EAAAA,EAAAA,UACtB,GAAsCJ,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAL6B,SAkBdC,IAlBc,uEAkB7B,2FACMJ,EAAcK,SAChBL,EAAcK,QAAQC,QAExBN,EAAcK,QAAU,IAAIE,gBAJ9B,mBAMyBC,EAAAA,EAAAA,IAAkBb,EAAO,CAC5Cc,OAAQT,EAAcK,QAAQI,SAPpC,OAMUC,EANV,OASIX,EAAkBW,GATtB,gDAWIC,QAAQC,IAAR,MAXJ,0DAlB6B,uBAO7BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,iFACXZ,EADW,gCAERE,EAAiBT,GAFT,OAGdQ,GAAe,GAHD,2CAAH,qDAOfW,GAED,GAAE,CAACnB,EAAOO,IAwBX,OACE,4BACE,kBAAMa,SAVW,SAAAC,GACnBA,EAAIC,iBACJvB,EAAgB,CACdC,MAAAA,IAEFS,EAAiBT,EAClB,EAIG,WACE,kBACEuB,KAAK,OACLC,MAAOxB,EACPyB,SAAU,SAAAJ,GAAG,OACXtB,EAAgB,CACdC,MAAOqB,EAAIK,OAAOF,OAFT,KAMf,mBAAQD,KAAK,SAAb,wBAEF,SAACI,EAAA,EAAD,CAAYZ,OAAQZ,MAGzB,CC7DD,IAOA,EAPe,WACb,OACE,0BACE,SAACP,EAAD,KAGL,C","sources":["components/MoviesSearch/MoviesSearch.js","pages/SearchPage.js"],"sourcesContent":["import { fetchMovieByQuery } from 'api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function MoviesSearch() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const controllerRef = useRef();\n  const [hasSearched, setHasSearched] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!hasSearched) {\n        await getMoviesByQuery(query);\n        setHasSearched(true);\n      }\n    };\n\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query, hasSearched]);\n  async function getMoviesByQuery() {\n    if (controllerRef.current) {\n      controllerRef.current.abort();\n    }\n    controllerRef.current = new AbortController();\n    try {\n      const movies = await fetchMovieByQuery(query, {\n        signal: controllerRef.current.signal,\n      });\n      setSearchedMovies(movies);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams({\n      query,\n    });\n    getMoviesByQuery(query);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={evt =>\n            setSearchParams({\n              query: evt.target.value,\n            })\n          }\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList movies={searchedMovies} />\n    </div>\n  );\n}\n","import { MoviesSearch } from 'components/MoviesSearch/MoviesSearch';\n\nconst Movies = () => {\n  return (\n    <div>\n      <MoviesSearch />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["MoviesSearch","useSearchParams","searchParams","setSearchParams","query","get","useState","searchedMovies","setSearchedMovies","controllerRef","useRef","hasSearched","setHasSearched","getMoviesByQuery","current","abort","AbortController","fetchMovieByQuery","signal","movies","console","log","useEffect","fetchData","onSubmit","evt","preventDefault","type","value","onChange","target","MoviesList"],"sourceRoot":""}