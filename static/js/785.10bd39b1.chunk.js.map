{"version":3,"file":"static/js/785.10bd39b1.chunk.js","mappings":"yNAqCA,UAjCgB,WACd,IAAMA,GAASC,EAAAA,EAAAA,MACf,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BC,EAAAA,EAAAA,IAAkBN,EAAOO,SAFxD,OAEUC,EAFV,OAGIJ,EAAWI,EAAaC,SAH5B,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,CAAgBZ,EAAOO,QACxB,GAAE,CAACP,EAAOO,UACXG,QAAQC,IAAIR,IAEV,yBACGA,GACC,wBACGA,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,qEAIP,C","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import { fetchMovieReviews } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const params = useParams();\n  const [reviews, setReviews] = useState(null);\n  useEffect(() => {\n    async function getMovieReviews() {\n      try {\n        const movieReviews = await fetchMovieReviews(params.movieId);\n        setReviews(movieReviews.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieReviews(params.movieId);\n  }, [params.movieId]);\n  console.log(reviews);\n  return (\n    <div>\n      {reviews ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["params","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","movieId","movieReviews","results","console","log","getMovieReviews","map","review","author","content","id"],"sourceRoot":""}